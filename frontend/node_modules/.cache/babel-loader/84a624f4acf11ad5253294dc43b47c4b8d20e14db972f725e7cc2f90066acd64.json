{"ast":null,"code":"import initialState from \"../store/initialState\";\nimport * as Actions from \"./actions\";\nexport const CartsReducer = (state = initialState.carts, action) => {\n  switch (action.type) {\n    case Actions.FETCH_CARTS:\n      return {\n        ...state,\n        results: action.payload.carts,\n        totalPrice: getTotalCartPrice(action.payload.carts),\n        totalCart: action.payload.carts.length,\n        totalCartItems: getTotalCartItems(action.payload.carts)\n      };\n    case Actions.ADD_CART:\n      const newAddedCarts = [...state.results, action.payload.cart];\n      return {\n        ...state,\n        results: newAddedCarts,\n        totalPrice: getTotalCartPrice(newAddedCarts),\n        totalCart: newAddedCarts.length,\n        totalCartItems: getTotalCartItems(newAddedCarts)\n      };\n    case Actions.UPDATE_CART:\n      const prevCarts = state.results;\n      const newUpdatedCarts = prevCarts.map(cart => {\n        if (cart.id === action.payload.cart.id) {\n          cart.quantity = action.payload.cart.quantity;\n          cart.total_price = action.payload.cart.quantity * cart.product.price;\n        }\n        return cart;\n      });\n      return {\n        ...state,\n        results: newUpdatedCarts,\n        totalPrice: getTotalCartPrice(newUpdatedCarts),\n        totalCart: newUpdatedCarts.length,\n        totalCartItems: getTotalCartItems(newUpdatedCarts)\n      };\n    case Actions.REMOVE_CART:\n      const newRemovedCarts = state.results.filter(cart => cart.id !== action.payload.cartId);\n      return {\n        ...state,\n        results: newRemovedCarts,\n        totalPrice: getTotalCartPrice(newRemovedCarts),\n        totalCart: newRemovedCarts.length,\n        totalCartItems: getTotalCartItems(newRemovedCarts)\n      };\n    case Actions.CLEAR_CARTS:\n      return {\n        ...state,\n        results: [],\n        totalPrice: 0,\n        totalCart: 0,\n        totalCartItems: 0\n      };\n    default:\n      return state;\n  }\n};\n_c = CartsReducer;\nconst getTotalCartPrice = carts => {\n  if (carts.length > 0) {\n    const totalPrice = carts.reduce((prev, cur) => prev + cur.total_price, 0);\n    return +totalPrice.toFixed(2);\n  }\n  return 0;\n};\nconst getTotalCartItems = carts => {\n  if (carts.length > 0) {\n    const totalCartItems = carts.reduce((prev, cur) => prev + cur.quantity, 0);\n    return totalCartItems;\n  }\n  return 0;\n};\nvar _c;\n$RefreshReg$(_c, \"CartsReducer\");","map":{"version":3,"names":["initialState","Actions","CartsReducer","state","carts","action","type","FETCH_CARTS","results","payload","totalPrice","getTotalCartPrice","totalCart","length","totalCartItems","getTotalCartItems","ADD_CART","newAddedCarts","cart","UPDATE_CART","prevCarts","newUpdatedCarts","map","id","quantity","total_price","product","price","REMOVE_CART","newRemovedCarts","filter","cartId","CLEAR_CARTS","_c","reduce","prev","cur","toFixed","$RefreshReg$"],"sources":["D:/hivetechwear/frontend/src/reducks/cart/reducers.js"],"sourcesContent":["import initialState from \"../store/initialState\";\r\nimport * as Actions from \"./actions\";\r\n\r\nexport const CartsReducer = (state = initialState.carts, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase Actions.FETCH_CARTS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tresults: action.payload.carts,\r\n\t\t\t\ttotalPrice: getTotalCartPrice(action.payload.carts),\r\n\t\t\t\ttotalCart: action.payload.carts.length,\r\n\t\t\t\ttotalCartItems: getTotalCartItems(action.payload.carts),\r\n\t\t\t};\r\n\r\n\t\tcase Actions.ADD_CART:\r\n\t\t\tconst newAddedCarts = [...state.results, action.payload.cart];\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tresults: newAddedCarts,\r\n\t\t\t\ttotalPrice: getTotalCartPrice(newAddedCarts),\r\n\t\t\t\ttotalCart: newAddedCarts.length,\r\n\t\t\t\ttotalCartItems: getTotalCartItems(newAddedCarts),\r\n\t\t\t};\r\n\r\n\t\tcase Actions.UPDATE_CART:\r\n\t\t\tconst prevCarts = state.results;\r\n\t\t\tconst newUpdatedCarts = prevCarts.map((cart) => {\r\n\t\t\t\tif (cart.id === action.payload.cart.id) {\r\n\t\t\t\t\tcart.quantity = action.payload.cart.quantity;\r\n\t\t\t\t\tcart.total_price = action.payload.cart.quantity * cart.product.price;\r\n\t\t\t\t}\r\n\t\t\t\treturn cart;\r\n\t\t\t});\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tresults: newUpdatedCarts,\r\n\t\t\t\ttotalPrice: getTotalCartPrice(newUpdatedCarts),\r\n\t\t\t\ttotalCart: newUpdatedCarts.length,\r\n\t\t\t\ttotalCartItems: getTotalCartItems(newUpdatedCarts),\r\n\t\t\t};\r\n\t\tcase Actions.REMOVE_CART:\r\n\t\t\tconst newRemovedCarts = state.results.filter((cart) => cart.id !== action.payload.cartId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tresults: newRemovedCarts,\r\n\t\t\t\ttotalPrice: getTotalCartPrice(newRemovedCarts),\r\n\t\t\t\ttotalCart: newRemovedCarts.length,\r\n\t\t\t\ttotalCartItems: getTotalCartItems(newRemovedCarts),\r\n\t\t\t};\r\n\t\tcase Actions.CLEAR_CARTS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tresults: [],\r\n\t\t\t\ttotalPrice: 0,\r\n\t\t\t\ttotalCart: 0,\r\n\t\t\t\ttotalCartItems: 0,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nconst getTotalCartPrice = (carts) => {\r\n\tif (carts.length > 0) {\r\n\t\tconst totalPrice = carts.reduce((prev, cur) => prev + cur.total_price, 0);\r\n\t\treturn +totalPrice.toFixed(2);\r\n\t}\r\n\treturn 0;\r\n};\r\n\r\nconst getTotalCartItems = (carts) => {\r\n\tif (carts.length > 0) {\r\n\t\tconst totalCartItems = carts.reduce((prev, cur) => prev + cur.quantity, 0);\r\n\t\treturn totalCartItems;\r\n\t}\r\n\treturn 0;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}